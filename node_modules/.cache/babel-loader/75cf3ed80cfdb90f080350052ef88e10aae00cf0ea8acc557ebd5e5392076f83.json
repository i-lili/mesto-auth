{"ast":null,"code":"var _jsxFileName = \"/Users/lilaismailova/dev/mesto-react/mesto/src/components/PopupWithForm.js\",\n  _s = $RefreshSig$();\nimport { useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PopupWithForm(props) {\n  _s();\n  // Обработчик клика на кнопку закрытия попапа\n  const handleCloseButtonClick = event => {\n    if (event.target.classList.contains(\"popup__close\")) {\n      props.onClose();\n    }\n  };\n  const handleOverlayClick = event => {\n    if (event.target === event.currentTarget) {\n      props.onClose();\n    }\n  };\n  useEffect(() => {\n    if (props.isOpen) {\n      const handleEscPress = event => {\n        if (event.key === \"Escape\") {\n          props.onClose();\n        }\n      };\n      document.addEventListener(\"keydown\", handleEscPress);\n      return () => {\n        document.removeEventListener(\"keydown\", handleEscPress);\n      };\n    }\n  }, [props.isOpen, props.onClose]);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: `popup popup_type_${props.name} ${props.isOpen ? \"popup_is-opened\" : \"\"}`,\n    id: props.id,\n    onClick: handleOverlayClick,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popup__container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"popup__title\",\n        children: props.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"popup__close\",\n        onClick: handleCloseButtonClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"popup__form\",\n        name: props.name,\n        noValidate: true,\n        children: props.children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n_s(PopupWithForm, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = PopupWithForm;\nexport default PopupWithForm;\nvar _c;\n$RefreshReg$(_c, \"PopupWithForm\");","map":{"version":3,"names":["useEffect","jsxDEV","_jsxDEV","PopupWithForm","props","_s","handleCloseButtonClick","event","target","classList","contains","onClose","handleOverlayClick","currentTarget","isOpen","handleEscPress","key","document","addEventListener","removeEventListener","className","name","id","onClick","children","title","fileName","_jsxFileName","lineNumber","columnNumber","type","noValidate","_c","$RefreshReg$"],"sources":["/Users/lilaismailova/dev/mesto-react/mesto/src/components/PopupWithForm.js"],"sourcesContent":["import { useEffect } from \"react\";\n\nfunction PopupWithForm(props) {\n    // Обработчик клика на кнопку закрытия попапа\n  const handleCloseButtonClick = (event) => {\n    if (event.target.classList.contains(\"popup__close\")) {\n      props.onClose();\n    }\n  };\n\n  const handleOverlayClick = (event) => {\n    if (event.target === event.currentTarget) {\n      props.onClose();\n    }\n  };\n\n  useEffect(() => {\n    if (props.isOpen) {\n      const handleEscPress = (event) => {\n        if (event.key === \"Escape\") {\n          props.onClose();\n        }\n      };\n      document.addEventListener(\"keydown\", handleEscPress);\n      return () => {\n        document.removeEventListener(\"keydown\", handleEscPress);\n      };\n    }\n  }, [props.isOpen, props.onClose]);\n\n  return (\n    <section\n      className={`popup popup_type_${props.name} ${\n        props.isOpen ? \"popup_is-opened\" : \"\"\n      }`}\n      id={props.id}\n      onClick={handleOverlayClick}\n    >\n      <div className=\"popup__container\">\n        <h2 className=\"popup__title\">{props.title}</h2>\n        <button\n          type=\"button\"\n          className=\"popup__close\"\n          onClick={handleCloseButtonClick}\n        ></button>\n        <form className=\"popup__form\" name={props.name} noValidate>\n          {props.children}\n        </form>\n      </div>\n    </section>\n  );\n}\n\nexport default PopupWithForm;\n"],"mappings":";;AAAA,SAASA,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,SAASC,aAAaA,CAACC,KAAK,EAAE;EAAAC,EAAA;EAC1B;EACF,MAAMC,sBAAsB,GAAIC,KAAK,IAAK;IACxC,IAAIA,KAAK,CAACC,MAAM,CAACC,SAAS,CAACC,QAAQ,CAAC,cAAc,CAAC,EAAE;MACnDN,KAAK,CAACO,OAAO,EAAE;IACjB;EACF,CAAC;EAED,MAAMC,kBAAkB,GAAIL,KAAK,IAAK;IACpC,IAAIA,KAAK,CAACC,MAAM,KAAKD,KAAK,CAACM,aAAa,EAAE;MACxCT,KAAK,CAACO,OAAO,EAAE;IACjB;EACF,CAAC;EAEDX,SAAS,CAAC,MAAM;IACd,IAAII,KAAK,CAACU,MAAM,EAAE;MAChB,MAAMC,cAAc,GAAIR,KAAK,IAAK;QAChC,IAAIA,KAAK,CAACS,GAAG,KAAK,QAAQ,EAAE;UAC1BZ,KAAK,CAACO,OAAO,EAAE;QACjB;MACF,CAAC;MACDM,QAAQ,CAACC,gBAAgB,CAAC,SAAS,EAAEH,cAAc,CAAC;MACpD,OAAO,MAAM;QACXE,QAAQ,CAACE,mBAAmB,CAAC,SAAS,EAAEJ,cAAc,CAAC;MACzD,CAAC;IACH;EACF,CAAC,EAAE,CAACX,KAAK,CAACU,MAAM,EAAEV,KAAK,CAACO,OAAO,CAAC,CAAC;EAEjC,oBACET,OAAA;IACEkB,SAAS,EAAG,oBAAmBhB,KAAK,CAACiB,IAAK,IACxCjB,KAAK,CAACU,MAAM,GAAG,iBAAiB,GAAG,EACpC,EAAE;IACHQ,EAAE,EAAElB,KAAK,CAACkB,EAAG;IACbC,OAAO,EAAEX,kBAAmB;IAAAY,QAAA,eAE5BtB,OAAA;MAAKkB,SAAS,EAAC,kBAAkB;MAAAI,QAAA,gBAC/BtB,OAAA;QAAIkB,SAAS,EAAC,cAAc;QAAAI,QAAA,EAAEpB,KAAK,CAACqB;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAM,eAC/C3B,OAAA;QACE4B,IAAI,EAAC,QAAQ;QACbV,SAAS,EAAC,cAAc;QACxBG,OAAO,EAAEjB;MAAuB;QAAAoB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACxB,eACV3B,OAAA;QAAMkB,SAAS,EAAC,aAAa;QAACC,IAAI,EAAEjB,KAAK,CAACiB,IAAK;QAACU,UAAU;QAAAP,QAAA,EACvDpB,KAAK,CAACoB;MAAQ;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACV;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACH;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACE;AAEd;AAACxB,EAAA,CAjDQF,aAAa;AAAA6B,EAAA,GAAb7B,aAAa;AAmDtB,eAAeA,aAAa;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}